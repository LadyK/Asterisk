[general]


[globals]
ZOIPER = SIP/1001               ; declare global variables here. uppercase
XLITE = SIP/1000


[unauthorized]

exten => start, 1, Answer()
        same => n, Hangup()

[default]

[zoiper_sip]

exten => s,1,Goto(zoiper_sip,1,1);
exten => _x,1,Answer()
exten => _x,n,Goto(incoming,phoneNumber,1)

[incoming]

exten => phoneNumber, 1, Goto(main_menu,start,1)
exten => 1phoneNumber, 1, Goto(main_menu,start,1)

exten => 42,1,Goto(main_menu,start,1);




[main_menu]
exten => start, 1, Set(step1count=0)                            ; Initialize counter
        same => n(greeting),Answer()
        same => n, Background(/usr/share/asterisk/sounds/en/greeting_soundFile)
        same => n(beginning), Background(/usr/share/asterisk/sounds/en/mainMenu_soundFile)
        same => n, WaitExten(8)

exten => 1, 1, Set(step2count=0)                ; ---> Leave to msgs
        same => n(toLeave), Playback(/usr/share/asterisk/sounds/en/toLeaveMsg_soundFile)
        same => n(record), Record(/var/spool/asterisk/tmp/newFile.wav)          ; to autosave on hangup = ,,,k
	
        same => n(action), Read(response,/usr/share/asterisk/sounds/en/reviewMessage_soundFile, 1)
        same => n, GotoIf($["${response}" = "1"]?99,listen:)  ; --> go to listen, if like, save; if not, re-record
        same => n, GotoIf($["${response}" = "2"]?98,saveit:) ; ---> just go save it; leave another or listen to others
        same => n, GotoIf($["${response}" = "3"]?1,record:) ; ---> go to record
        same => n, GotoIf($["${response}" = "4"]?2,1:)   ; ----> go to listen to vms
	same => n, WaitExten(5)
	same => n, Background(/usr/share/asterisk/sounds/en/areYouStillThere_soundFile)
	same => n, Goto(action)
	same => n, Hangup()
	
exten => 99, 1(listen), Wait(1)
        same => n, Playback(/var/spool/asterisk/tmp/newFile)
        same => n, Verbose(did it play ${PLAYBACKSTATUS})
        same => n, Read(responsePostListen,/usr/share/asterisk/sounds/en/reviewMessage2_soundFile, 1)
        same => n, GotoIf($["${responsePostListen}" = "1"]?98,saveit:)
        same => n, GotoIf($["${responsePostListen}" = "2"]?1,record:)
        same => n, GotoIf($["${responsePostListen}" = "3"]?2,1:)
	same => n, WaitExten(5)
	
        same => n, Background(/usr/share/asterisk/sounds/en/areYouStillThere_soundFile)
        same => n, Goto(main_menu,1,action) 
	same => n, Hangup()

exten => 98, 1(saveit), Set(date=${STRFTIME(${EPOCH},,%Y%m%d-%H%M-%S):-12})
        same => n, System(mv /var/spool/asterisk/tmp/newFile.wav /usr/share/asterisk/sounds/myFolder/${date}.wav) ; save the file in myFolder as the current date
        same => n, Set(__file=${date})          ; 1 needs to be a variable that increments and concatenates to the title file

same => n, System(mv /var/spool/asterisk/tmp/newFile.wav /usr/share/asterisk/sounds/myFolder/${date}.wav) ; save the file in myFolder as the current date
        same => n, Set(__file=${date})          ; 1 needs to be a variable that increments and concatenates to the title file
        same => n, Verbose(file title is ${date}.wav)   ; i need file variable to increment for next caller
        same => n, Playback(thankyou_soundFile)
        same => n, Wait(1)
        same => n, Goto(start,beginning)
        
        
exten => 2, 1, Set(step2count=0)                ; ----> listen to msgs
        
        same => n(toListen), Playback(/usr/share/asterisk/sounds/en/toListenMsg_soundFile)
        same => n, Goto(random,1,random)
        same => n, GotoIf($["${direction}" = "1"]?random,1,random:)     ; context,extension,label   true:false
        same => n, GotoIf($["${direction}" = "2"]?51,upBack:)

exten => h,1,Set(result=${SHELL(bash /var/spool/asterisk/tmp/empty.sh)}) ;runs script to save sound file, if hung up
	same => n,NoOp(result is ${result})
	same => n, Hangup()
       
exten => i,1,Playback(invalidSelection_soundFile)
        same => n, Goto(start,beginning)
        
exten => t,1,Playback(goodBye_soundFile)
        same => n,Hangup()
        
        
        
[random]
        
exten => 1,1(random),Verbose(we are going to play files randomly)
        same => n(randie),Set(file=${SHELL(bash /etc/asterisk/random.sh)}) ; run script to play files randomly
        same => n,Verbose("random file is ${file}")
 ;same => n(playback),Playback(/usr/share/asterisk/sounds/myFolder/${file})
        same => n,Read(choice,/usr/share/asterisk/sounds/myFolder/${file},1)
        same => n,GotoIf($["${choice}" = "*"]?1,random:main_menu,start,beginning)

        
        same => n,Playback(vm-goodbye)
        same => n,Hangup()
        

exten => i,1,Playback(db_invalid)
        same => n, Goto(main_menu,start,beginning)
        
exten => t,1,Playback(vm-goodbye)
        same => n,Hangup()



